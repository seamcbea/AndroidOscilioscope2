package com.example.jevaughnsdixon.myapplication;

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.Toast;


import com.jjoe64.graphview.GraphView;
import com.jjoe64.graphview.Viewport;
import com.jjoe64.graphview.series.DataPoint;
import com.jjoe64.graphview.series.LineGraphSeries;

public class nActivity extends AppCompatActivity {
    LineGraphSeries<DataPoint> line_series;
    Button button;
    double x=0;
    boolean pause_graph=false;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_n);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        button=(Button)findViewById(R.id.button1);
        button.setText("Pause/Start Graph");
        button.setOnClickListener(new View.OnClickListener(){
            @Override
            public void onClick(View v){
                pause_graph=!pause_graph;
            if(!pause_graph){
                Toast.makeText(nActivity.this, "Graphing Paused",Toast.LENGTH_SHORT).show();
            }
            else
            {
                Toast.makeText(nActivity.this, "Graphing Started",Toast.LENGTH_SHORT).show();
            }

            }
        });
        setSupportActionBar(toolbar);
      //  GraphView gr=new LineGraphView(this,"Demo");


        GraphView graph1=(GraphView)findViewById(R.id.graph);
       // line_series=new LineGraphSeries<DataPoint>(new DataPoint[]{
        //    new DataPoint(0,0),new DataPoint(1,8),new DataPoint(2,0),new DataPoint(5,5)
      //  });

        line_series=new LineGraphSeries<DataPoint>();
        Viewport view_port= graph1.getViewport();
        view_port.setYAxisBoundsManual(true);

        graph1.getViewport().setMinY(-6);
        graph1.getViewport().setMaxY(6);
        view_port.setXAxisBoundsManual(true);
        //graph1.getViewport().setMinX(0);
         //graph1.getViewport().setMaxX(10);
        graph1.getViewport().setScrollable(true);
        graph1.getViewport().setScalable(true);
        graph1.getGridLabelRenderer().setHorizontalAxisTitle("Time/s");
        graph1.getGridLabelRenderer().setVerticalAxisTitle("Voltage/V");


        line_series.setThickness(3);
        graph1.addSeries(line_series);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_n, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    protected void onResume()
    {
        super.onResume();
        new Thread(new Runnable() {
            @Override
            public void run() {

                while(true) {
                    if (pause_graph) {
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                addEntry();
                            }
                        });

                        try {
                            Thread.sleep(25);
                        } catch (InterruptedException e) {
                        }
                    }
                }
             }
        }

        ).start();
    }

    private void addEntry()
    {

            x = x + 0.01;
            line_series.appendData(new DataPoint(x, Math.sin(x) * 5), true, 100);


    }

}
